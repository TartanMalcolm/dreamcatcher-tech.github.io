"use strict";(self.webpackChunk_dreamcatcher_tech_dreamcatcher_website=self.webpackChunk_dreamcatcher_tech_dreamcatcher_website||[]).push([[8035],{3905:function(e,t,a){a.d(t,{Zo:function(){return p},kt:function(){return c}});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var l=n.createContext({}),d=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},p=function(e){var t=d(e.components);return n.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),m=d(a),c=r,h=m["".concat(l,".").concat(c)]||m[c]||u[c]||o;return a?n.createElement(h,i(i({ref:t},p),{},{components:a})):n.createElement(h,i({ref:t},p))}));function c(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,i=new Array(o);i[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var d=2;d<o;d++)i[d]=a[d];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},506:function(e,t,a){a.r(t),a.d(t,{assets:function(){return p},contentTitle:function(){return l},default:function(){return c},frontMatter:function(){return s},metadata:function(){return d},toc:function(){return u}});var n=a(3117),r=a(102),o=(a(7294),a(3905)),i=["components"],s={},l="I11 Request-Idea",d={unversionedId:"Ideas/I11",id:"Ideas/I11",title:"I11 Request-Idea",description:"Target",source:"@site/nfas/Ideas/I11.md",sourceDirName:"Ideas",slug:"/Ideas/I11",permalink:"/nfas/Ideas/I11",editUrl:"https://github.com/dreamcatcher-tech/dreamcatcher-tech.github.io/edit/master/website/nfas/Ideas/I11.md",tags:[],version:"current",frontMatter:{},sidebar:"nfas",previous:{title:"I07 Web Liquidity Pooling",permalink:"/nfas/Ideas/I07"},next:{title:"Immutable Permissioning",permalink:"/nfas/Drafts/Immutable Permissioning"}},p={},u=[{value:"Target",id:"target",level:2},{value:"Inherits",id:"inherits",level:2},{value:"Dependencies",id:"dependencies",level:2},{value:"Outputs",id:"outputs",level:2},{value:"Concept",id:"concept",level:2},{value:"Actors and Actions",id:"actors-and-actions",level:2},{value:"Implementation Steps",id:"implementation-steps",level:2}],m={toc:u};function c(e){var t=e.components,a=(0,r.Z)(e,i);return(0,o.kt)("wrapper",(0,n.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"i11-request-idea"},"I11 Request-Idea"),(0,o.kt)("h2",{id:"target"},"Target"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/dreamcatcher-tech/dreamcatcher-tech.github.io/blob/master/website/nfas/Requests/R10.md"},"R10 Request-Idea")),(0,o.kt)("h2",{id:"inherits"},"Inherits"),(0,o.kt)("h2",{id:"dependencies"},"Dependencies"),(0,o.kt)("h2",{id:"outputs"},"Outputs"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/nfas/Requests/R10"},"R10 Request-Idea"),")"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/nfas/Ideas/I11"},"I11 Request-Idea")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://dreamcatcher-tech.github.io/pool/"},"DC Pool Page")),(0,o.kt)("li",{parentName:"ul"},"App Concepts, TBD."),(0,o.kt)("li",{parentName:"ul"},"Complexity count")),(0,o.kt)("h2",{id:"concept"},"Concept"),(0,o.kt)("p",null,"We want to encourage Requests and Ideas to be written down, not matter how vague, as early as possible, then provide a route to move from that vagueness through to having them admitted to a Pool, executed and produce Outputs.  To do this we'd set up areas in git where md files can be placed while in one of three states:  "),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Open: This is the state Requests and Ideas are in before Pool QA have signed them off.  In this state they can be as rough or as complete as you want - no-one's checking.  This the is entry area into the process.   NFTs may (optionally) be generated by the author at any point in this state, one per doc.",(0,o.kt)("ol",{parentName:"li"},(0,o.kt)("li",{parentName:"ol"},"State Change Open -> Locked occurs when a Request or Idea passes QA.  NFTs are generated for docs that do not yet have them, and pass QA."))),(0,o.kt)("li",{parentName:"ol"},"Locked: this is the state Requests and Ideas that have passed Pool QA are in before they have been fully executed.  In this state a running total of the time/payments spent to date are tallied.",(0,o.kt)("ol",{parentName:"li"},(0,o.kt)("li",{parentName:"ol"},"State Change Locked -> Finalised occurs when the Outputs from an Idea are passed by QA."))),(0,o.kt)("li",{parentName:"ol"},"Finalized: when work has been done on an Idea and the Outputs signed off by QA.  Each sign off would consist of the Request (optionally), the Idea with links to the final Outputs, and a record of the time/payments spent.  NFTs are generated at this stage for Outputs.")),(0,o.kt)("p",null,"A record of these states would be maintained in a file named Market.md which contains a markdown grid of Requests and the Ideas in each state.  For each row we track a tally of the USD pooled funds, and the time expenditure against each one."),(0,o.kt)("p",null,"The two state changes are controlled by a QA function.  "),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"For Open -> Locked: QA is considering whether the Request or Idea adheres to the formatting, and is sufficiently clear in describing a pure problem (Requests) and pure solution (Ideas).  "),(0,o.kt)("li",{parentName:"ol"},"For Locked -> Finalised: QA is considering whether the Outputs from an Idea do actually reflect all of the criteria in the Targetted Request (if there is one), and in the Idea description itself.  I.e. did it do what it said it would do?")),(0,o.kt)("p",null,"To implement the states and state transistions, we'd use two different folders in git, and a pool dashboard (market.md)"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Requests and Ideas in 'Open' state are in the NFAs folder, and linked from the Open grid in market.md"),(0,o.kt)("li",{parentName:"ol"},"Open -> Locked state change copies the file to the website folder, and moves the link and time/cost data to the Locked grid in market.md"),(0,o.kt)("li",{parentName:"ol"},"Locked -> Finalised state change moves the link and time/cost data to the Finalised grid in market.md")),(0,o.kt)("p",null,"We'd keep the templates for Requests and Ideas in the NFAs folder, and link to them from market.md.  We'd publish the Request/Idea process at the bottom of market.md."),(0,o.kt)("p",null,"For implementing QA we will use a combination of youtube live streamed calls and pull requests between msm & inv.  Feedback for failed QA attempts is therefore in recorded form rather than documents.  Successful QA attempts are documented by an accepted pull request."),(0,o.kt)("p",null,"As we don't have a clear idea yet of how much effort, in terms of real money, the Request/Ideas will take and don't have a market to discover what that value should be, we will use pomos as a virtual currency.  By logging pomos against Requests and Ideas we can have a first stab at measuring effort, which can be broadly equated to cash once we've built up some experience recording them as virtual money."),(0,o.kt)("h2",{id:"actors-and-actions"},"Actors and Actions"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"QA",(0,o.kt)("ol",{parentName:"li"},(0,o.kt)("li",{parentName:"ol"},"Reviews Requests and Ideas against the formats"),(0,o.kt)("li",{parentName:"ol"},"Records feedback to workers through youtube/voice recording."),(0,o.kt)("li",{parentName:"ol"},"Receive PRs for state changes"))),(0,o.kt)("li",{parentName:"ol"},"Workers",(0,o.kt)("ol",{parentName:"li"},(0,o.kt)("li",{parentName:"ol"},"Write and implement feedback for Requests/Ideas."),(0,o.kt)("li",{parentName:"ol"},"Submit PRs for state changes"),(0,o.kt)("li",{parentName:"ol"},"Produce the Outputs"),(0,o.kt)("li",{parentName:"ol"},"Log work data"),(0,o.kt)("li",{parentName:"ol"},"May generate NFTs for their docs."))),(0,o.kt)("li",{parentName:"ol"},"Funders",(0,o.kt)("ol",{parentName:"li"},(0,o.kt)("li",{parentName:"ol"},"Pool money against a Request, or an Idea in the Pool."))),(0,o.kt)("li",{parentName:"ol"},"Moderator",(0,o.kt)("ol",{parentName:"li"},(0,o.kt)("li",{parentName:"ol"},"Generates NFTs at State Change Open -> Locked if the doc does not already have one."),(0,o.kt)("li",{parentName:"ol"},"Updates market.md."),(0,o.kt)("li",{parentName:"ol"},"Ensures new Requests/Ideas appear on the website.")))),(0,o.kt)("h2",{id:"implementation-steps"},"Implementation Steps"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Write the guidance section in market.md"),(0,o.kt)("li",{parentName:"ol"},"Check and update the Templates, and link them from market.md"),(0,o.kt)("li",{parentName:"ol"},"Populate the data in market.md for any existing Requests/Ideas."),(0,o.kt)("li",{parentName:"ol"},"Run the integration tests 1-4 on a Request/Idea pair.  This pair will be trivial - we need to test through to Finalised, which involves generating Outputs and two state changes with QA at each, so we will keep it light in order to focus on the integration tests themselves.  "),(0,o.kt)("li",{parentName:"ol"},"Run through each step in that process and check/update that ",(0,o.kt)("a",{parentName:"li",href:"https://dreamcatcher-tech.github.io/docs/"},"The User Dictionary")," is correct for the terms used.  "),(0,o.kt)("li",{parentName:"ol"},"Run Integration test 5 (Self Improvement) on the notes generated on the process to this point."),(0,o.kt)("li",{parentName:"ol"},"Create stubs for all existing App Concepts, then run each, one by one, through to Locked.")),(0,o.kt)("h1",{id:"integration-tests"},"Integration Tests"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Submit a Request:",(0,o.kt)("ol",{parentName:"li"},(0,o.kt)("li",{parentName:"ol"},"Submit to State Change Open -> Locked"),(0,o.kt)("li",{parentName:"ol"},"Have it bounce with QA feedback"),(0,o.kt)("li",{parentName:"ol"},"Fix the issues"),(0,o.kt)("li",{parentName:"ol"},"Submit to State Change Open -> Locked QA"),(0,o.kt)("li",{parentName:"ol"},"Pass QA, and update folders and market.md"))),(0,o.kt)("li",{parentName:"ol"},"Submit a Request (as above)"),(0,o.kt)("li",{parentName:"ol"},"Work on Idea Outputs while Locked",(0,o.kt)("ol",{parentName:"li"},(0,o.kt)("li",{parentName:"ol"},"Update Idea with links to Outputs"),(0,o.kt)("li",{parentName:"ol"},"Log work"))),(0,o.kt)("li",{parentName:"ol"},"Finalise an Idea ",(0,o.kt)("ol",{parentName:"li"},(0,o.kt)("li",{parentName:"ol"},"Submit to State Change Locked -> Finalised QA"),(0,o.kt)("li",{parentName:"ol"},"Have it bounce with QA feedback"),(0,o.kt)("li",{parentName:"ol"},"Fix the issues"),(0,o.kt)("li",{parentName:"ol"},"Submit to State Change Locked -> Finalised QA"),(0,o.kt)("li",{parentName:"ol"},"Pass QA, and update folders and market.md"))),(0,o.kt)("li",{parentName:"ol"},"Self improvement",(0,o.kt)("ol",{parentName:"li"},(0,o.kt)("li",{parentName:"ol"},"For notes taken on the Open -> Finalised process"),(0,o.kt)("li",{parentName:"ol"},"Submit an Idea for the improvement to be made (targetted at ",(0,o.kt)("a",{parentName:"li",href:"/nfas/Requests/R10"},"R10 Request-Idea"),")"),(0,o.kt)("li",{parentName:"ol"},"Submit to State Change Open -> Locked QA"),(0,o.kt)("li",{parentName:"ol"},"Pass QA, and update folders and market.md"),(0,o.kt)("li",{parentName:"ol"},"Carry out the improvement, logging time."),(0,o.kt)("li",{parentName:"ol"},"Submit to State Change Locked -> Finalised QA"),(0,o.kt)("li",{parentName:"ol"},"Pass QA, and update folders and market.md")))),(0,o.kt)("p",null,"Done is when the process has passed all three integration tests, ",(0,o.kt)("a",{parentName:"p",href:"https://dreamcatcher-tech.github.io/docs/"},"The User Dictionary")," has been updated, the complexity count (number of Dictionary concepts used) is known and one cycle of self-improvement has been proven."))}c.isMDXComponent=!0}}]);