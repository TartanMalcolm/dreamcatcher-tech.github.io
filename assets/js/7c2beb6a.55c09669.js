"use strict";(self.webpackChunk_dreamcatcher_tech_dreamcatcher_website=self.webpackChunk_dreamcatcher_tech_dreamcatcher_website||[]).push([[6482],{3905:function(e,r,t){t.d(r,{Zo:function(){return p},kt:function(){return y}});var o=t(7294);function n(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function c(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function a(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?c(Object(t),!0).forEach((function(r){n(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):c(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function i(e,r){if(null==e)return{};var t,o,n=function(e,r){if(null==e)return{};var t,o,n={},c=Object.keys(e);for(o=0;o<c.length;o++)t=c[o],r.indexOf(t)>=0||(n[t]=e[t]);return n}(e,r);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(o=0;o<c.length;o++)t=c[o],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var u=o.createContext({}),s=function(e){var r=o.useContext(u),t=r;return e&&(t="function"==typeof e?e(r):a(a({},r),e)),t},p=function(e){var r=s(e.components);return o.createElement(u.Provider,{value:r},e.children)},l={inlineCode:"code",wrapper:function(e){var r=e.children;return o.createElement(o.Fragment,{},r)}},f=o.forwardRef((function(e,r){var t=e.components,n=e.mdxType,c=e.originalType,u=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),f=s(t),y=n,m=f["".concat(u,".").concat(y)]||f[y]||l[y]||c;return t?o.createElement(m,a(a({ref:r},p),{},{components:t})):o.createElement(m,a({ref:r},p))}));function y(e,r){var t=arguments,n=r&&r.mdxType;if("string"==typeof e||n){var c=t.length,a=new Array(c);a[0]=f;var i={};for(var u in r)hasOwnProperty.call(r,u)&&(i[u]=r[u]);i.originalType=e,i.mdxType="string"==typeof e?e:n,a[1]=i;for(var s=2;s<c;s++)a[s]=t[s];return o.createElement.apply(null,a)}return o.createElement.apply(null,t)}f.displayName="MDXCreateElement"},9749:function(e,r,t){t.r(r),t.d(r,{frontMatter:function(){return i},contentTitle:function(){return u},metadata:function(){return s},toc:function(){return p},default:function(){return f}});var o=t(7462),n=t(3366),c=(t(7294),t(3905)),a=["components"],i={},u=void 0,s={unversionedId:"User_Dictionary/Governor Typeof:Person or Project",id:"User_Dictionary/Governor Typeof:Person or Project",title:"Governor Typeof:Person or Project",description:"A Project that has some control over another Project through Governance, with the primary power being the ability to accept or reject Pull Requests made to the Project.  A Governor may be set to null to make a Project autonomous.",source:"@site/docs/User_Dictionary/Governor Typeof:Person or Project.md",sourceDirName:"User_Dictionary",slug:"/User_Dictionary/Governor Typeof:Person or Project",permalink:"/docs/User_Dictionary/Governor Typeof:Person or Project",editUrl:"https://github.com/dreamcatcher-tech/dreamcatcher-tech.github.io/edit/master/website/docs/User_Dictionary/Governor Typeof:Person or Project.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"GovernanceAlgo Typeof:ProjectAlgo",permalink:"/docs/User_Dictionary/GovernanceAlgo Typeof:ProjectAlgo"},next:{title:"History",permalink:"/docs/User_Dictionary/History"}},p=[],l={toc:p};function f(e){var r=e.components,t=(0,n.Z)(e,a);return(0,c.kt)("wrapper",(0,o.Z)({},l,t,{components:r,mdxType:"MDXLayout"}),(0,c.kt)("p",null,"A Project that has some control over another Project through Governance, with the primary power being the ability to accept or reject Pull Requests made to the Project.  A Governor may be set to null to make a Project autonomous."))}f.isMDXComponent=!0}}]);