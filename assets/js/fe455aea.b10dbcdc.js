"use strict";(self.webpackChunk_dreamcatcher_tech_dreamcatcher_website=self.webpackChunk_dreamcatcher_tech_dreamcatcher_website||[]).push([[6402],{3905:function(e,t,r){r.d(t,{Zo:function(){return p},kt:function(){return y}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function a(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=n.createContext({}),u=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):c(c({},t),e)),r},p=function(e){var t=u(e.components);return n.createElement(s.Provider,{value:t},e.children)},f={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},l=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,p=a(e,["components","mdxType","originalType","parentName"]),l=u(r),y=o,d=l["".concat(s,".").concat(y)]||l[y]||f[y]||i;return r?n.createElement(d,c(c({ref:t},p),{},{components:r})):n.createElement(d,c({ref:t},p))}));function y(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,c=new Array(i);c[0]=l;var a={};for(var s in t)hasOwnProperty.call(t,s)&&(a[s]=t[s]);a.originalType=e,a.mdxType="string"==typeof e?e:o,c[1]=a;for(var u=2;u<i;u++)c[u]=r[u];return n.createElement.apply(null,c)}return n.createElement.apply(null,r)}l.displayName="MDXCreateElement"},5974:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return a},contentTitle:function(){return s},metadata:function(){return u},toc:function(){return p},default:function(){return l}});var n=r(7462),o=r(3366),i=(r(7294),r(3905)),c=["components"],a={},s=void 0,u={unversionedId:"User_Dictionary/Citation typeof:Dependency",id:"User_Dictionary/Citation typeof:Dependency",title:"Citation typeof:Dependency",description:"A way to indicate that this Ghost has benefitted in some way from an Asset, but where there\u2019s no Ghost to Weak Link to.  E.g. can be used to keep note of out-of-Dreamcatcher contributions, important reference materials, urls and so forth.",source:"@site/docs/User_Dictionary/Citation typeof:Dependency.md",sourceDirName:"User_Dictionary",slug:"/User_Dictionary/Citation typeof:Dependency",permalink:"/docs/User_Dictionary/Citation typeof:Dependency",editUrl:"https://github.com/dreamcatcher-tech/dreamcatcher-tech.github.io/edit/master/website/docs/User_Dictionary/Citation typeof:Dependency.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Branch typeof:Object",permalink:"/docs/User_Dictionary/Branch typeof:Object"},next:{title:"CombinerAlgo",permalink:"/docs/User_Dictionary/CombinerAlgo"}},p=[],f={toc:p};function l(e){var t=e.components,r=(0,o.Z)(e,c);return(0,i.kt)("wrapper",(0,n.Z)({},f,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"A way to indicate that this Ghost has benefitted in some way from an Asset, but where there\u2019s no Ghost to Weak Link to.  E.g. can be used to keep note of out-of-Dreamcatcher contributions, important reference materials, urls and so forth."))}l.isMDXComponent=!0}}]);