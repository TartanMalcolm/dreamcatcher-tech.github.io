"use strict";(self.webpackChunk_dreamcatcher_tech_dreamcatcher_website=self.webpackChunk_dreamcatcher_tech_dreamcatcher_website||[]).push([[6765],{3905:function(e,t,r){r.d(t,{Zo:function(){return l},kt:function(){return f}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=n.createContext({}),u=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},l=function(e){var t=u(e.components);return n.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),d=u(r),f=o,m=d["".concat(s,".").concat(f)]||d[f]||p[f]||a;return r?n.createElement(m,i(i({ref:t},l),{},{components:r})):n.createElement(m,i({ref:t},l))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=d;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:o,i[1]=c;for(var u=2;u<a;u++)i[u]=r[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},5100:function(e,t,r){r.r(t),r.d(t,{assets:function(){return l},contentTitle:function(){return s},default:function(){return f},frontMatter:function(){return c},metadata:function(){return u},toc:function(){return p}});var n=r(3117),o=r(102),a=(r(7294),r(3905)),i=["components"],c={},s="I12 DC Pool QA",u={unversionedId:"Ideas/I12",id:"Ideas/I12",title:"I12 DC Pool QA",description:"Target",source:"@site/nfas/Ideas/I12.md",sourceDirName:"Ideas",slug:"/Ideas/I12",permalink:"/nfas/Ideas/I12",editUrl:"https://github.com/dreamcatcher-tech/dreamcatcher-tech.github.io/edit/master/website/nfas/Ideas/I12.md",tags:[],version:"current",frontMatter:{},sidebar:"nfas",previous:{title:"I11 Request-Idea",permalink:"/nfas/Ideas/I11"},next:{title:"Immutable Permissioning",permalink:"/nfas/Drafts/Immutable Permissioning"}},l={},p=[{value:"Target",id:"target",level:2},{value:"Dependencies",id:"dependencies",level:2},{value:"Proposed Approach",id:"proposed-approach",level:2},{value:"Proposed Output",id:"proposed-output",level:2}],d={toc:p};function f(e){var t=e.components,r=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"i12-dc-pool-qa"},"I12 DC Pool QA"),(0,a.kt)("h2",{id:"target"},"Target"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/dreamcatcher-tech/dreamcatcher-tech.github.io/blob/master/website/nfas/Requests/R11.md"},"R11")," - DC Pool QA"),(0,a.kt)("h2",{id:"dependencies"},"Dependencies"),(0,a.kt)("h2",{id:"proposed-approach"},"Proposed Approach"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Start with a semi-stub QA guidance doc that essentially provides links to the Request Process and states that it's a nod from the two of us."),(0,a.kt)("li",{parentName:"ol"},"Run Requests and Ideas through that short process before submitting to the ",(0,a.kt)("a",{parentName:"li",href:"https://dreamcatcher-tech.github.io/pool/"},"Poo")),(0,a.kt)("li",{parentName:"ol"},"Refine through use.")),(0,a.kt)("h2",{id:"proposed-output"},"Proposed Output"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"A guidance doc, laying out what the DC QA requirements are. Trivially in this case, the DC QA Authority will be writing these.")))}f.isMDXComponent=!0}}]);